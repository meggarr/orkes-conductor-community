dependencies {

    implementation "com.netflix.conductor:conductor-common:${versions.revConductor}"
    implementation "com.netflix.conductor:conductor-core:${versions.revConductor}"
    implementation ("com.netflix.conductor:conductor-postgres-persistence:${versions.revConductor}")

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"

    //Metrics
    implementation "io.micrometer:micrometer-registry-prometheus:${versions.revMicrometer}"
    implementation "io.micrometer:micrometer-core:${versions.revMicrometer}"
    implementation "com.netflix.spectator:spectator-reg-micrometer:${versions.revSpectator}"
    implementation "com.netflix.spectator:spectator-reg-metrics3:${versions.revSpectator}"
    implementation "com.netflix.spectator:spectator-api:${versions.revSpectator}"

    implementation 'org.springframework.retry:spring-retry'

    //Flyway for postgres configuration
    implementation "org.flywaydb:flyway-core"

    //Cache
    implementation "com.google.guava:guava:${versions.revGuava}"

    //Lucene
    implementation "org.apache.lucene:lucene-core:${versions.revLucene}"
    implementation "org.apache.lucene:lucene-analyzers-common:${versions.revLucene}"

    //spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.hamcrest:hamcrest'
    testImplementation "org.awaitility:awaitility:3.1.6"

    //postgres test container
    testImplementation "org.testcontainers:postgresql:${versions.revTestContainer}"

    //Fake data generator
    testImplementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
//    testImplementation group: 'org.yaml', name: 'snakeyaml', version: '2.2'
}

test {
    useJUnitPlatform()
}